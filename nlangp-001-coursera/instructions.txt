# map and replace rare words with _RARE_
python src/nlpGeneTagger.py --phase preprocess --filein "other/hw1/input/gene.train.txt" --fileout "other/hw1/output/gene.train.txt"

# find counts
python other/hw1/input/count_freqs.py other/hw1/output/gene.train.txt > other/hw1/output/gene.counts.txt

# tag
python src/nlpGeneTagger.py --phase tag --filecounts "other/hw1/output/gene.counts.txt" --filein "other/hw1/input/gene.dev.txt" --fileout "other/hw1/output/gene.dev.out.txt"

# evaluate unigram tagger
python other/hw1/input/eval_gene_tagger.py "other/hw1/input/gene.key.txt" "other/hw1/output/gene.dev.out.txt"
# EXPECTED:
# Found 2669 GENEs. Expected 642 GENEs; Correct: 424.
#          precision      recall          F1-Score
# GENE:    0.158861       0.660436        0.256116
# I GOT:
# Found 1731 GENEs. Expected 642 GENEs; Correct: 318.
#          precision      recall          F1-Score
# GENE:    0.183709       0.495327        0.268015

# submit unigram tagger
python src/nlpGeneTagger.py --phase tag --filecounts "other/hw1/output/gene.counts.txt" --filein "other/hw1/input/gene.test.txt" --fileout "other/hw1/output/gene.test.out.txt"
cp "other/hw1/output/gene.test.out.txt" "gene_test.p1.out"
python other/hw1/input/submit.py