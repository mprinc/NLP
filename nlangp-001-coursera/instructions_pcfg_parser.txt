cd /Users/mprinc/Documents/data/development/NLP/nlangp-001-coursera
python src/nlpPcfgParser.py --phase preprocess_rare --filein "other/hw2/input/parse_train.dat.json" --fileout "other/hw2/output/parse_train.dat.rare.json"

# [u'S', [u'PP', [u'ADP', u'In'], [u'NP', [u'DET', u'the'], [u'NP', [u'ADJ', '_RARE_'], [u'NOUN', '_RARE_']]]], [u'S', [u'NP', [u'ADJ', u'British'],
#     [u'NOUN', '_RARE_']], [u'S', [u'VP', [u'VERB', u'were'], [u'VP', [u'VERB', u'used'], [u'S+VP', [u'PRT', u'to'], [u'VP', [u'VERB', '_RARE_'],
#     [u'WHNP', [u'DET', u'which'], [u'NOUN', '_RARE_']]]]]], [u'.', u'?']]]]

# ["S", ["PP", ["ADP", "In"], ["NP", ["DET", "the"], ["NP", ["ADJ", "late"], ["NOUN", "1700<s"]]]], ["S", ["NP", ["ADJ", "British"], 
#     ["NOUN", "convicts"]], ["S", ["VP", ["VERB", "were"], ["VP", ["VERB", "used"], ["S+VP", ["PRT", "to"], ["VP", ["VERB", "populate"], 
#     ["WHNP", ["DET", "which"], ["NOUN", "colony"]]]]]], [".", "?"]]]]

# print tree
python other/hw2/scripts/pretty_print_tree.py "other/hw2/input/parse_train.dat.json"
python other/hw2/scripts/pretty_print_tree.py "other/hw2/output/parse_train.dat.rare.json"

# find counts
python other/hw2/scripts/count_cfg_freqs.py other/hw2/input/parse_train.dat.json > other/hw2/output/cfg.counts.txt
python other/hw2/scripts/count_cfg_freqs.py other/hw2/output/parse_train.dat.rare.json > other/hw2/output/cfg.counts.rare.txt

cp "other/hw2/output/cfg.counts.rare.txt" "parse_train.counts.out"
python other/hw2/scripts/submit.py

# =============================================
# parse development
python src/nlpPcfgParser.py --phase cky --filecounts "other/hw2/output/cfg.counts.rare.txt" --filein "other/hw2/input/parse_dev.dat.txt" --fileout "other/hw2/output/parse_dev.dat.out.cky.json"

# print
python other/hw2/scripts/pretty_print_tree.py other/hw2/output/parse_dev.dat.out.cky.json

# evaluate
python other/hw2/scripts/eval_parser.py other/hw2/input/parse_dev.key.json other/hw2/output/parse_dev.dat.out.cky.json

#First argument should end in '.key'.
#      Type       Total   Precision      Recall     F1-Score
#===============================================================
#      ADJP          13     0.375        0.231        0.286
#      ADVP          20     0.800        0.200        0.320
#        NP        1081     0.698        0.735        0.716
#        PP         326     0.767        0.810        0.788
#       PRT           6     0.500        0.333        0.400
#        QP           2     0.000        0.000        0.000
#         S          45     0.714        0.222        0.339
#      SBAR          15     0.833        0.333        0.476
#     SBARQ         488     0.972        0.998        0.985
#        SQ         488     0.894        0.916        0.905
#        VP         305     0.725        0.380        0.499
#    WHADJP          43     0.812        0.907        0.857
#    WHADVP         125     0.953        0.968        0.960
#      WHNP         372     0.892        0.884        0.888
#      WHPP          10     1.000        0.600        0.750
#
#     total        3339     0.814        0.787        0.800

# parse test
python src/nlpPcfgParser.py --phase cky --filecounts "other/hw2/output/cfg.counts.rare.txt" --filein "other/hw2/input/parse_test.dat.txt" --fileout "other/hw2/output/parse_test.dat.out.cky.json"


# submit parser
cp "other/hw2/output/parse_test.dat.out.cky.json" "parse_test.p2.out"
python other/hw2/scripts/submit.py

### ====================================================================================================================
